! Example Driven Development Example Driven Development is a natural evolution of Test Driven Development (TDD). To explain it, let's start with an address book implementation using test cases. Test !! Test Driven Development Each contact is presented by three objects: ${class:DmAbContact}$, ${class:DmAbAddress}$, and ${class:DmAbTelephone}$. ${class:DmAbAddressBook}$ holds all contacts. The class definitions are the following:${changes:01-domain.ombu}$ Let's write some test cases:${changes:01-tests.ombu}$ Let's execute test cases:[[[(TestRunner new	packageSearchUpdate: 'AddressBook';	classSearchUpdate: 'DmAb';	selectAllPackages;	runAll;	build) height: 250]]]Let's make tests green implementing behavior: ${changes:02-domain-methods.ombu}$Let's execute test cases again: [[[(TestRunner new	packageSearchUpdate: 'AddressBook';	classSearchUpdate: 'DmAb';	selectAllPackages;	runAll;	build) height: 250]]]!!! Documentation and Learning Process When a product is ready to consume, we should also facilitate learning process. Do you agree? If so, what is the common process to support learning and reading? ... A documentation is a common entry point. Developers assemble software documentation commonly as an external documentation, blog posts, etc. There is an example of such documentation: ${inputFile:external-documentation.md}$.!!! TDD and Documentation IssuesWhat is the issue with the previous workflow? !!! Obsolete and Non-Live DocumentationFirst, the documentation is external and tend to decay as products evolve. Second, it is not Live!!! Readers cannot really play with it unless they copy and paste all code.The second issue can be improved by using Pillar syntax that has support inside of Pharo: ${inputFile:external-documentation.pillar}$!!! Double EffortOn other hand, the documentation is still hard to test (no assertions inside of code snippets). More over, there is a double effort. We already wrote such code snippets while writing test cases. Check ${method:DmAbAddressBookTest>>#testMyContactsAddressBook}$!! Example Driven Development Let's see how Example Driven Development looks like. We start with a class definition, similar to ${class:DmAbAddressBookTest}$. The difference is that we do not subclass ${class:TestCase}$, but ${class:Object}$.${changes:03-examples.ombu}$For more advanced assertions, developers can subclass ${class:GtExampleProvider}$.Let's create the first example:${changes:04-first-example}$${example:DmAbAddressBookExample>>#addressTelephone}$Let's add two more examples: ${changes:05-example-methods}$${example:DmAbAddressBookExample>>#contactAddress}$${example:DmAbAddressBookExample>>#johnDoeContact}$