! GToolkit DocumenterDocumenter makes creating and +consuming+ documentation a beautiful experience. And it transforms the environment into a data science tool.! Fixed Use Cases!! Documenting SoftwareWhat is broken with software documentation? First af all, it is an unpleasent experience for most of developers. One, reason is that developers create a software product and they create documentation. This the way developers do documentation about software, copy&pasting code and taking screenshots.+file://creating-documetation.png+Documenter directly embeds code and makes the examples explorable: ${inputFile:path=look.pillar}$ We can directly use this to document our classes ${class:name=BrButtonLabelLookExamples}$!! Teaching SoftwareDocumenter can be also used for teaching. It makes it possible to follow tutorial step by step, change the code in a tutorial, and compare changes.[[[| gtexamples exampleTutorial |gtexamples := IceRepository registry detect: [ :each | each name = 'gtoolkit-examples' ].exampleTutorial := gtexamples location / 'doc' / 'tutorial' / 'examples-tutorial.pillar'.]]]!! Data Science First, we get some data:[[[height=600pictureFile := IceRepository repositoriesLocation 		/ 'feenkcom'		/ 'gtoolkit-demos' 		/ 'data' 		/ 'faceapi' 		/ '1280px-Einstein-with-habicht-and-solovine.jpg'.pictureForm := pictureFile readStreamDo: [ :aStream |		(ImageReadWriter formFromStream: aStream binary) ].picture := GtCSPicture new.picture pictureForm: pictureForm.]]]Perform some analysis:[[[faceData := { 	GtCSExamplesData jsonFaceLandmarksSolovine.	GtCSExamplesData jsonFaceLandmarksEinstein.	GtCSExamplesData jsonFaceLandmarksHabicht.}]]]*The First Notebook War>https://yihui.name/en/2018/09/notebook-war/*! Examples! Demo! Download http://gtoolkit.com${inputFile:path=/Users/jurajkubelka/Documents/esug-documenter.pillar}$  