OmEntry {	#tags : {		#prior : OmNullReference [  ],		#self : OmReference [ '1' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #GtCSDPictureExamples,				#isMetaSide : false			},			#name : #pictureWithFacesWithLandmarksAndNoForm,			#protocol : #'example - picture',			#sourceCode : 'pictureWithFacesWithLandmarksAndNoForm\r\t<gtExample>\r\t| picture |\r\tpicture := self emptyPicture.\r\tpicture ensureFacesStorage.\r\tpicture \r\t\taddFace: self faceEinsteinWithLandmarks;\r\t\taddFace: self faceHabichtWithLandmarks;\r\t\taddFace: self faceSolovineWithLandmarks.\r\tself assert: picture faces size equals: 3.\r\tself assertFacesWithNoFormFor: picture.\r\t^ picture',			#stamp : 'AndreiChis 9/6/2018 17:45',			#package : #GToolkit-Demo-CognitiveServices-FaceAPI-Examples		}	}}OmEntry {	#tags : {		#prior : OmReference [ '1' ],		#self : OmReference [ '2' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #GtCSDPictureExamples,				#isMetaSide : false			},			#name : #pictureWithFacesWithLandmarksAndForm,			#protocol : #'example - picture',			#sourceCode : 'pictureWithFacesWithLandmarksAndForm\r\t<gtExample>\r\t| picture |\r\tpicture := self pictureWithFacesWithLandmarksAndNoForm.\r\tpicture loadPictureFormFile: self pictureFile.\r\tself assert: picture faces size equals: 3.\r\tself assertFacesWithFormIn: picture.\r\t^ picture',			#stamp : 'AndreiChis 9/6/2018 17:45',			#package : #GToolkit-Demo-CognitiveServices-FaceAPI-Examples		}	}}OmEntry {	#tags : {		#prior : OmReference [ '2' ],		#self : OmReference [ '3' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #GtCSDPictureExamples,				#isMetaSide : false			},			#name : #faceLandmarksEinstein,			#protocol : #'example - face',			#sourceCode : 'faceLandmarksEinstein\r\t<gtExample>\r\t| landmarks |\r\tlandmarks := (GtCSFaceLandmarks fromDictionary: GtCSExamplesData jsonFaceLandmarksEinstein).\r\t^ landmarks\r\r',			#stamp : 'AndreiChis 9/6/2018 17:46',			#package : #GToolkit-Demo-CognitiveServices-FaceAPI-Examples		}	}}OmEntry {	#tags : {		#prior : OmReference [ '3' ],		#self : OmReference [ '4' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #GtCSDPictureExamples,				#isMetaSide : false			},			#name : #faceLandmarksHabicht,			#protocol : #'example - face',			#sourceCode : 'faceLandmarksHabicht\r\t<gtExample>\r\t| landmarks |\r\tlandmarks := (GtCSFaceLandmarks fromDictionary: \r\t\tGtCSExamplesData jsonFaceLandmarksHabicht).\r\t^ landmarks\r\r',			#stamp : 'AndreiChis 9/6/2018 17:46',			#package : #GToolkit-Demo-CognitiveServices-FaceAPI-Examples		}	}}OmEntry {	#tags : {		#prior : OmReference [ '4' ],		#self : OmReference [ '5' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #GtCSDPictureExamples,				#isMetaSide : false			},			#name : #faceLandmarksSolovine,			#protocol : #'example - face',			#sourceCode : 'faceLandmarksSolovine\r\t<gtExample>\r\t| landmarks |\r\tlandmarks := (GtCSFaceLandmarks \r\t\tfromDictionary: GtCSExamplesData jsonFaceLandmarksSolovine).\r\t^ landmarks\r\r',			#stamp : 'AndreiChis 9/6/2018 17:46',			#package : #GToolkit-Demo-CognitiveServices-FaceAPI-Examples		}	}}OmEntry {	#tags : {		#prior : OmReference [ '5' ],		#self : OmReference [ '6' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #GtCSDPictureExamples,				#isMetaSide : false			},			#name : #faceEinsteinWithLandmarks,			#protocol : #'example - face',			#sourceCode : 'faceEinsteinWithLandmarks\r\t<gtExample>\r\t| face |\r\tface := self faceEinstein.\r\tface landmarks: self faceLandmarksEinstein.\r\tself assert: face landmarks notNil.\r\t^ face',			#stamp : 'AndreiChis 9/6/2018 17:46',			#package : #GToolkit-Demo-CognitiveServices-FaceAPI-Examples		}	}}OmEntry {	#tags : {		#prior : OmReference [ '6' ],		#self : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #GtCSDPictureExamples,				#isMetaSide : false			},			#name : #faceHabichtWithLandmarks,			#protocol : #'example - face',			#sourceCode : 'faceHabichtWithLandmarks\r\t<gtExample>\r\t| face |\r\tface := self faceHabicht.\r\tface landmarks: self faceLandmarksHabicht.\r\tself assert: face landmarks notNil.\r\t^ face',			#stamp : 'AndreiChis 9/6/2018 17:46',			#package : #GToolkit-Demo-CognitiveServices-FaceAPI-Examples		}	}}OmEntry {	#tags : {		#prior : OmReference [ '7' ],		#self : OmReference [ '8' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #GtCSDPictureExamples,				#isMetaSide : false			},			#name : #faceSolovineWithLandmarks,			#protocol : #'example - face',			#sourceCode : 'faceSolovineWithLandmarks\r\t<gtExample>\r\t| face |\r\tface := self faceSolovine.\r\tface landmarks: self faceLandmarksSolovine.\r\tself assert: face landmarks notNil.\r\t^ face',			#stamp : 'AndreiChis 9/6/2018 17:46',			#package : #GToolkit-Demo-CognitiveServices-FaceAPI-Examples		}	}}OmEntry {	#tags : {		#prior : OmReference [ '8' ],		#self : OmReference [ '9' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #GtCSDPictureExamples,				#isMetaSide : false			},			#name : #faceEinsteinWithLandmarksInPicture,			#protocol : #'example - face',			#sourceCode : 'faceEinsteinWithLandmarksInPicture\r\t<gtExample>\r\t| face picture|\r\tface := self faceEinsteinWithLandmarks.\r\tpicture := self emptyPicture.\r\tpicture ensureFacesStorage.\r\tpicture\r\t\taddFace: face.\r\tpicture loadPictureFormFile: self pictureFile.\r\tself assert: face landmarks notNil.\r\t^ face',			#stamp : 'AndreiChis 9/6/2018 17:47',			#package : #GToolkit-Demo-CognitiveServices-FaceAPI-Examples		}	}}