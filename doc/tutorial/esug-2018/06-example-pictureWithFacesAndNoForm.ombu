OmEntry {	#tags : {		#prior : OmNullReference [  ],		#self : OmReference [ '1' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #GtCSDPictureExamples,				#isMetaSide : false			},			#name : #pictureWithFacesAndNoForm,			#protocol : #'example - picture',			#sourceCode : 'pictureWithFacesAndNoForm\r  <gtExample>\r  | picture |\r  picture := self emptyPicture.\r  picture ensureFacesStorage.\r  picture \r    addFace: self faceEinstein;\r    addFace: self faceHabicht;\r    addFace: self faceSolovine.\r  self assert: picture faces size equals: 3.\r  self assertFacesWithNoFormFor: picture.\r  ^ picture',			#stamp : 'AndreiChis 9/6/2018 16:17',			#package : #GToolkit-Demo-CognitiveServices-FaceAPI-Examples		}	}}OmEntry {	#tags : {		#prior : OmReference [ '1' ],		#self : OmReference [ '2' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #GtCSDPictureExamples,				#isMetaSide : false			},			#name : #faceHabicht,			#protocol : #'example - face',			#sourceCode : 'faceHabicht\r\t<gtExample>\r\t| face |\r\tface := GtCSFace new\r\t\trectangle: ((279@313) corner: (378@412)).\r\tself assert: face rectangle notNil.\r   self assert: face containerPicture isNil.\r\t^ face',			#stamp : 'AndreiChis 9/6/2018 16:18',			#package : #GToolkit-Demo-CognitiveServices-FaceAPI-Examples		}	}}OmEntry {	#tags : {		#prior : OmReference [ '2' ],		#self : OmReference [ '3' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #GtCSDPictureExamples,				#isMetaSide : false			},			#name : #faceSolovine,			#protocol : #'example - face',			#sourceCode : 'faceSolovine\r\t<gtExample>\r\t| face |\r\tface := GtCSFace new\r\t\trectangle: ((622@172) corner: (714@264)).\r\tself assert: face rectangle notNil.\r   self assert: face containerPicture isNil.\r\t^ face',			#stamp : 'AndreiChis 9/6/2018 16:18',			#package : #GToolkit-Demo-CognitiveServices-FaceAPI-Examples		}	}}OmEntry {	#tags : {		#prior : OmReference [ '3' ],		#self : OmReference [ '4' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #GtCSDPictureExamples,				#isMetaSide : false			},			#name : #'assertFacesWithNoFormFor:',			#protocol : #assertion,			#sourceCode : 'assertFacesWithNoFormFor: aPicture\r  aPicture faces do: [ :aFace |\r    self assert: aFace containerPicture equals: aPicture.\r    self assert: aFace hasFaceForm not ]',			#stamp : 'AndreiChis 9/6/2018 16:21',			#package : #GToolkit-Demo-CognitiveServices-FaceAPI-Examples		}	}}